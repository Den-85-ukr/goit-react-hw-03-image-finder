{"version":3,"sources":["App.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/ScrollUPButton/ScrollUPButton.js","components/services/image-api.js","components/Modal/Modal.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","styles","SearchForm","this","type","SearchForm_button","SearchForm_button__label","onChange","SearchForm_input","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","imgURL","alt","largeImage","onToggle","onClick","src","ImageGalleryItem_image","ImageGallery","images","onToggleModal","map","id","tags","webformatURL","largeImageURL","defaultProp","Button","loadMore","window","scrollTo","top","document","documentElement","scrollHeight","behavior","tupe","ScrollUPButton","pagePx","showScroll","scrollTop","topButtonClick","addEventListener","removeEventListener","title","axios","defaults","baseURL","fetch","fetchImages","searchQuery","currentPage","pageSize","get","then","data","hits","modalRoot","querySelector","Modal","handleKeyDown","code","onClose","handleOverlay","target","children","createPortal","Overlay","App","isLoading","selectImage","error","onChangeQuery","options","imagesApi","prevState","catch","finally","toggleModal","url","showModal","prevProps","shouldRenderLoadMoreButton","length","message","Loader","color","height","width","ButtonContainer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8df2f409.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1oiZO\",\"Loader\":\"App_Loader__2IXQl\",\"ButtonContainer\":\"App_ButtonContainer__NdZhK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2XXks\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__IudHd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3rluN\",\"Modal\":\"Modal_Modal__1g6hY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2zQUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3aj6O\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Searchbar.module.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ query: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    \r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={styles.SearchForm_button}>\r\n            <span className={styles.SearchForm_button__label}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            className={styles.SearchForm_input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","import { Component } from 'react';\r\nimport styles from './ImageGalleryItem.module.css';\r\n\r\nclass ImageGalleryItem extends Component {\r\n  render() {\r\n    const { imgURL, alt, largeImage, onToggle } = this.props;\r\n    return (\r\n      <li\r\n        className={styles.ImageGalleryItem}\r\n        onClick={() => onToggle(largeImage, alt)}\r\n      >\r\n        <img\r\n          src={imgURL}\r\n          alt={alt}\r\n          className={styles.ImageGalleryItem_image}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nimport styles from './ImageGallery.module.css';\r\n\r\nclass ImageGallery extends Component {\r\n    render() {\r\n        const { images, onToggleModal } = this.props;\r\n        return (\r\n          <ul className={styles.ImageGallery}>\r\n            {images.map(({ id, tags, webformatURL, largeImageURL }) => {\r\n              return (\r\n                <ImageGalleryItem\r\n                  key={id}\r\n                  imgURL={webformatURL}\r\n                  largeImage={largeImageURL}\r\n                  alt={tags}\r\n                  onToggle={onToggleModal}\r\n                />\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n    }\r\n}\r\n\r\nImageGallery.defaultProp = {\r\n  images: [],\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  onToggleModal: PropTypes.func.isRequired,\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ImageGallery;","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ loadMore }) => {\r\n   window.scrollTo({\r\n     top: document.documentElement.scrollHeight,\r\n     behavior: 'smooth',\r\n   });\r\n  \r\n  return (\r\n    <button tupe=\"button\" className={styles.Button} onClick={loadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  loadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import { Component } from 'react';\r\n\r\n// scroll button appears when the page scrolls to 40px\r\n\r\nclass ScrollUPButton extends Component {\r\n  \r\n    state = {\r\n      pagePx: '',\r\n      id: '',\r\n    };\r\n  \r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.showScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.showScroll);\r\n  }\r\n\r\n  showScroll = () => {\r\n    document.documentElement.scrollTop > 40\r\n      ? this.setState({ id: 'myBtn' })\r\n      : this.setState({ id: '' });\r\n  };   \r\n\r\n  topButtonClick = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n      return (\r\n          <button\r\n              tupe=\"button\"\r\n              onClick={this.topButtonClick}\r\n              id={this.state.id}\r\n              title=\"Go to top\"\r\n          >Top ↑\r\n          </button>)\r\n  }\r\n}\r\n\r\nexport default ScrollUPButton;","import axios from 'axios';\r\n\r\nconst myApiKey = '20406911-f22ead56d7a6718c622225634';\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\n\r\nconst fetchImages = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) => {\r\n  return axios\r\n    .get(\r\n      `?key=${myApiKey}&q=${searchQuery}&pageSize=${pageSize}&page=${currentPage}`,\r\n    )\r\n    .then(({ data }) => data.hits);\r\n};\r\n\r\nconst fetch = { fetchImages };\r\n\r\nexport default fetch;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleOverlay = event => {\r\n    if (event.target === event.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return createPortal(\r\n      <div className={styles.Overlay} onClick={this.handleOverlay}>\r\n        <div className={styles.Modal}>{children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Modal;","import { Component } from 'react';\n\nimport Loader from 'react-loader-spinner';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport ScrollUPButton from './components/ScrollUPButton';\nimport imagesApi from './components/services/image-api';\nimport Modal from './components/Modal';\n\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    //showModal: false,\n    selectImage: {},\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({ isLoading: true });\n\n    imagesApi\n      .fetchImages(options)\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  toggleModal = (url, alt) => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      selectImage: { url, alt },\n    }));\n  };\n\n  render() {\n    const {\n      showModal,\n      images,\n      isLoading,\n      error,\n      selectImage: { url, alt },\n    } = this.state;\n\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n\n    return (\n      <div className={styles.App}>\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={url} alt={alt} />\n          </Modal>\n        )}\n\n        {error && <p>Uups Error! {error.message}</p>}\n\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        <ImageGallery images={images} onToggleModal={this.toggleModal} />\n\n        {isLoading && (\n          <div className={styles.Loader}>\n            <Loader type=\"TailSpin\" color=\"#3f51b5\" height={80} width={80} />\n          </div>\n        )}\n\n        {shouldRenderLoadMoreButton && (\n          <div className={styles.ButtonContainer}>            \n            <Button loadMore={this.fetchImages} />\n            <ScrollUPButton />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2vYEt\",\"SearchForm\":\"Searchbar_SearchForm__vlWvG\",\"SearchForm_button\":\"Searchbar_SearchForm_button__1QRgj\",\"SearchForm_button__label\":\"Searchbar_SearchForm_button__label__mxDlK\",\"SearchForm_input\":\"Searchbar_SearchForm_input__1VvIM\"};"],"sourceRoot":""}